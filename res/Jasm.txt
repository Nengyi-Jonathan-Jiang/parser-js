Memory layout:
    ... - - HEAP - - | 0 | - - DATA - - | - - STACK - - ...
 
Stack is addressed by positive numbers
Null pointer (0) is disallowed
Allocations are done on heap (addressed by negative numbers)
All code must be in one file -- no libraries at the asm level
Due to lazy, all chars are actually int-sized (4 bytes)
Which gives room for formatting

char format:
    [c * 8] 
    [fg * 6] [bold] [italic]
    [bg * 6] [top] [bottom]
    [bd * 6] [right] [left]

operations:
    [opcode * 6] [@x] [@y]
    [o * 4] [jmp * 3] [@o]
    [x * 4] [y * 4]
    [--------]

opcodes:
    100000 | add
    100001 | fadd
    100010 | sub
    100011 | fsub
    100100 | mul
    100101 | fmul
    100110 | div
    100111 | fdiv
    -------------
    101000 | mod
    101001 | fmod
    -------------
    101010 | or
    101011 | and
    101100 | xor
    101101 | --
    101110 | shl
    101111 | shr

    000001 | dspc
    000010 | dspi
    000011 | dspf
    -------------
    000100 | mov
    -------------
    000101 | dspc
    000110 | dspi
    000111 | dspf
    -------------
    001000 | new
    001001 | del

    010000 | inc
    010001 | dec
    010010 | neg
    010011 | fneg
    010100 | not

Load operation (load a literal) is encoded as 8 bytes
    [0 0 0 0 0 0 0 0]
    [o * 4] [jmp * 3] [@o]
    [--------]
    [--------]
    [data * 32]